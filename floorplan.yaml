      name: Demo Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css
      
      # These options are optional
      warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text
      
      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:

        - name: Sensors
          entities:
             - sensor.dark_sky_temperature
             - sensor.dublin_temperature
          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
          # text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'  
          text_template: '${entity.state ? entity.state : "unknown"}°F'
          # class_template: '
          #   var temp = parseFloat(entity.state.replace("°", ""));
          #   if (temp < 10)
          #     return "temp-low";
          #   else if (temp < 30)
          #     return "temp-medium";
          #   else
          #     return "temp-high";
          #   '

        - name: Lights
          entities:
            # - light.bedroom
            - light.hue_color_light_1
            - light.hue_color_light_2
            # - light.chris_nightstand
            # - light.nicole_nightstand

            # - light.dining_room
            # - light.dining_room_window
            # - light.front_room
            # - light.front_room_white
            # - light.hue_color_light_1
            # - light.hue_color_light_2
            # - light.hue_color_light_by_bar
            # - light.living_room
            # - light.living_room_by_chris
            # - light.living_room_by_computers
            # - light.living_room_by_heater
            # - light.living_room_by_nicole
            # - light.living_room_piano
            # - light.mud_room_north
            # - light.mud_room_south
            # - light.mudroom
            # - light.mudroom_candlestick
             # - group.kitchen_lights
             # - group.living_room_lights
          states:
            - state: 'on'
              class: 'light-on'
            - state: 'off'
              class: 'light-off'
          action:
            # domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle

        # - name: Switches
        #   entities:
        #      - switch.doorbell
        #   states:
        #     - state: 'on'
        #       class: 'doorbell-on'
        #     - state: 'off'
        #       class: 'doorbell-off'

        # - name: Binary sensors
        #   entities:
        #     - binary_sensor.front_hallway
        #     - binary_sensor.kitchen
        #     - binary_sensor.master_bedroom
        #     - binary_sensor.theatre_room
        #   states:
        #     - state: 'off'
        #       class: 'info-background'
        #     - state: 'on'
        #       class: 'warning-background'
        #   state_transitions:
        #     - name: On to off
        #       from_state: 'on'
        #       to_state: 'off'
        #       duration: 10

        # - name: Cameras
        #   entities:
        #     - camera.hallway
        #     - camera.driveway
        #     - camera.front_door
        #     - camera.backyard
        #   states:
        #     - state: 'idle'
        #       class: 'camera-idle'
              
#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
